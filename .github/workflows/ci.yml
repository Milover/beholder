name: ci

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      skip-third-party:
        description: 'Skip building the base image'
        required: true
        type: boolean
        default: true

# cannot use env in 'uses' contexts, see
# https://github.com/actions/runner/issues/2372
#env:
#  GCC_VERSION: 12
#  CLANG_VERSION: 14
#  GOLANGCI_VERSION: '1.63.4'
#  STAGING_DIR: '/usr/local'

jobs:
  changes:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: read
    outputs:
      third-party: ${{ steps.filter.outputs.third-party }}
      c-api: ${{ steps.filter.outputs.c-api }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get file changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            third-party:
              - 'build/ci/beholder.Dockerfile'
              - '_c-api/third_party/**'
            beholder:
              - '_c-api/**'
              - 'cmd/**'
              - 'go.mod'
              - 'go.sum'
              - 'internal/**'
              - 'main.go'

  # build and push base container image
  third-party:
    needs: changes
    uses: ./.github/workflows/base_image.yml
    with:
      skip-build: |-
        ${{
          needs.changes.outputs.third-party == 'false' ||
          (github.event_name == 'workflow_dispatch' && inputs.skip-third-party)
        }}
      gcc-version: 12
      clang-version: 14
      staging-dir: '/usr/local'
      dockerhub-username: ${{ vars.DOCKERHUB_USERNAME }}
    secrets:
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

  # build and test beholder
  beholder:
    needs: [changes, third-party]
    if: |-
      ${{
        needs.changes.outputs.beholder == 'true' ||
        github.event_name == 'workflow_dispatch'
      }}
    uses: ./.github/workflows/build.yml
    with:
      docker-image: ${{ needs.third-party.outputs.image }}
      golangci-version: '1.63.4'
      staging-dir: '/usr/local'
      dockerhub-username: ${{ vars.DOCKERHUB_USERNAME }}
    secrets:
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
